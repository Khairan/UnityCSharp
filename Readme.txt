 Расписать в текстовом документе плюсы и минусы изученных структур данных и
расписать примеры в которых нужно будет использовать тот или иной контейнер

1. Необобщенные коллекции позволяют работать с объектами любого типа, что дает возможность хранить в них данные разных типов,
это удобно, когда типы хранящихся в коллекции объектов заранее не известны, но из-за этого они не обеспечивают типовую безопасность
и работают медленнее чем обобщенные коллекции.

2. Обобщенные коллекции позволяют работать с объектами определенного типа, что повышает производительность, т.к.
не тратится время на упаковку и распаковку объекта и у них повышенная типобезопасность. Их стоит использовать, когда работаем
с объектами с заранее известными типами данных.

List - аналог массива с динамически изменяемой длиной

HashSet и SortedSet - коллекции для хранения различающихся элементов, 
хороши для хранения больших объемов данных за счет повышенной скорости работы благодаря хешированию

ObservableCollection - аналог List, но с возможностью оповещения внешних объектов о том, что коллекция была изменена

LinkedList - двухсвязный список, в котором каждый элемент хранит ссылку одновременно на следующий и на предыдущий элемент,
он состоит из узлов типа LinkedListNode<T>, поэтому операции вставки и удаления являются операциями O(1).

KeyValuePair - служит для хранения ключа и его значения, применяется в классах обобщенных коллекций,
в которых хранятся пары «ключ-значение»

Dictionary - позволяет хранить пары «ключ-значение» в коллекции, как в словаре.
Получение значения с помощью его ключа выполняется очень быстро, близко к O (1), поскольку класс реализуется как хэш-таблица

Queue - обычная очередь работающая по алгоритму FIFO

Stack - аналог очереди, но работает по алгоритму LIFO, удобен для реализации магазина в оружии. 